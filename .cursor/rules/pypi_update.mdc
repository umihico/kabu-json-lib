---
description: 
globs: 
alwaysApply: false
---
# PyPIパッケージ更新手順

1. **変更差分の確認**
   - `git diff`で現在の機能追加したいスクリプトが何かを確認する。
   - 現在の差分に何を追加すればよいか、過去のPRの差分を参考にするため、以下のコマンドを実行する
     ```bash
     gh pr view 2 --json title,body,number,url,state | cat && gh pr diff 2 | cat
     ```

2. **実装・修正**
   - 必要な修正を実装する。
   - 必要な依存パッケージがあれば`pyproject.toml`の`dependencies`に追加する。
   - **新しい関数やクラスをパッケージのトップレベルでimportしたい場合は、`__init__.py`に必ず追記する。**

3. **README更新**
   - 新機能や修正内容を`README.md`に反映する。
   - 使い方の例も追加する。

4. **コミット**
   - 変更内容をコミットする。コミットは既存のルールに従う。「feat: 機能追加」や「fix: バグ修正」など分かりやすく記述する。

5. **パッケージの更新と公開**
   - `scripts/publish.sh`を実行する。
   - このスクリプトは以下の処理を自動的に実行する：
     1. 変更をプッシュ
     2. テストの実行
     3. ビルドファイルのクリーンアップ
     4. パッケージのビルド
     5. CIチェックの待機と確認
     6. PyPIへのアップロード

---

## 注意
- `__init__.py`のエクスポート忘れは特に注意。新しい関数・クラスを外部からimportできるようにしたい場合は、必ず`__init__.py`に追記すること。
- スクリプトを実行する前に、GitHub CLI（`gh`）と`twine`がインストールされていることを確認すること。
- PyPIの認証情報が`~/.pypirc`に設定されていることを確認すること。
